extends Node2D

class_name Skill

@export var stats: SkillStats
@export var level: LevelComponent
@export var aspects: Array[PackedScene]

@onready var serializer_component: SerializerComponent = SerializerComponent.new()

var history_component: HistoryComponent = HistoryComponent.new()

func _ready() -> void:
	add_child(history_component)
	#serializer_component.hard_serialize_keys = ['level']

func test() -> bool:
	print("It's just skill test in SkillStats.gd file")
	return true

## –ñ–∏–∑–Ω–µ–Ω–Ω—ã–π —Ü–∏–∫–ª –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —É–º–µ–Ω–∏—è. –ù—É–∂–Ω–æ, —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è—Ç—å –≤ —É–º–µ–Ω–∏—è—Ö —Ç–æ–ª—å–∫–æ use_custom(), –æ—Å—Ç–∞–≤–∏–≤ –∂–∏–∑–Ω–µ–Ω–Ω—ã–π —Ü–∏–∫–ª –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
func use() -> bool:
	var result = use_logic()
	if result:
		level.upgrade_chance()
		history().add_log(log_use_success())
	else:
		history().add_log(log_use_failure())
	return result

## –ë—ã—Å—Ç—Ä–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—É –∏—Å—Ç–æ—Ä–∏–∏
func history():
	return history_component
	
## –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —É–º–µ–Ω–∏—è
func log_use_success() -> String:
	if first_target() and source():
		return " %s %s üéØ%s —É–º–µ–Ω–∏–µ–º ü™Ñ%s:" % [ source().unit_name, hint(), first_target().unit_name, stats.skill_name]
	return 'ERROR'
	
## –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —É–º–µ–Ω–∏—è
func log_use_failure() -> String:
	if source():
		return "%s: –ù–µ —É–¥–∞–ª–æ—Å—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —É–º–µ–Ω–∏–µ ü™Ñ%s" % [source().unit_name, stats.skill_name]
	return "ERROR"

	
## –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —É–º–µ–Ω–∏—è. –ü–µ–ø–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –≤ —Å–∞–º–æ–º —É–º–µ–Ω–∏–∏.
func use_logic() -> bool:
	print('Skill use_logic() not implemented')
	return false
	
## –ê–∫—Ç–∏–≤–Ω—ã–µ —Ü–µ–ª–∏ (—Ç–∞—Ä–≥–µ—Ç—ã) –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç
func targets():
	return get_tree().get_nodes_in_group('targets') as Array[Player]

## –ò—Å—Ç–æ—á–Ω–∏–∫ —É–º–µ–Ω–∏—è
func source():
	return get_tree().get_first_node_in_group('active') as Player
	
## –ü–µ—Ä–≤–∞—è —Ü–µ–ª—å –∏–∑ —Å–ø–∏—Å–∫–∞ —Ü–µ–ª–µ–π
func first_target():
	if targets().size() > 0:
		return targets()[0].get_parent() as Player

## –ü–æ–¥—Å–∫–∞–∑–∫–∞ —Å –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
func hint() -> String:
	print('Skill hint() not implemented')
	return 'Skill hint() not implemented'
	
## –í—ã—á–∏—Å–ª–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏–π –¥–ª—è –±–æ–ª–µ–µ —É–ø—Ä–æ—â—ë–Ω–Ω–æ–≥–æ –ø–æ–¥—Å—á—ë—Ç–∞ —Ñ–æ—Ä–º—É–ª
func calc_values():
	print('Skill calc_values() not implemented')
	return {}
	
func disabled():
	return true

func serialize():
	#return serializer_component.serialize()
	return {
		level: level.serialize()
	}
	
func deserialize(data):
	return serializer_component.deserialize(data)
