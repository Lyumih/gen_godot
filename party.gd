extends Control

var table_width = 15
var table_height = 15
var table_size = table_width * table_height

var player: Player
var upgrades = ["‚ù§Ô∏è2", "‚ù§Ô∏è10", "üí™1", "üí™4", "‚öï2", "‚öï6", "", "üëü1"]
var all_upgrades = []

func _ready() -> void:
	EventBus.target_changed.connect(change_target)
	change_target()
	%TableUpgrades.columns = table_width
	init_all_upgrades()
	init_unit_upgrades()

## –ù–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —Å–ª—É—á–∞–π–Ω—ã–º–∏ —É–ª—É—á—à–µ–Ω–∏—è–º–∏.
func init_all_upgrades():
	for index in table_size:
		all_upgrades.push_front(upgrades.pick_random())
	
## –æ—Ç–ª–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è —Å–æ–±—ã—Ç–∏–µ —Å–º–µ–Ω—ã –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
func change_target():
	player = get_tree().get_first_node_in_group(Global.GROUPS.TARGETS) as Player
	if player:
		%TabContainer.show()
	else: 
		%TabContainer.hide()
	update_skill_list()
	update_player_label()
	
## –û–±–Ω–æ–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ —É–º–µ–Ω–∏–π —É —Ç–µ–∫—É—â–µ–≥–æ –∏–≥—Ä–æ–∫–∞
func update_skill_list():
	for child in %SkillsContainer.get_children(): child.queue_free()
	print('update_skill_list', player)
	if player and player.SKILLS:
		for skill in player.SKILLS as Array[Skill]:
			var skillCard = load("res://ui/card/skill/SkillCard.tscn").instantiate()
			%SkillsContainer.add_child(skillCard)
			skillCard.update_skill(skill)

## –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —É–ª—É—á—à–µ–Ω–∏–π –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
func init_unit_upgrades():
	#var size = table_width * table_height
	#for item_index in size:
	for item_index in table_size:
		var cell = Button.new()
		cell.text = all_upgrades[item_index]
		cell.custom_minimum_size = Vector2(48, 48)
		cell.connect('button_down', upgrade_player_cell_click.bind(item_index))
		%TableUpgrades.add_child(cell)
		upgrade_cells()

## –æ–±–Ω–æ–≤–ª–µ–Ω–µ –ª–µ–π–±–ª–∞ —è—á–µ–µ–∫
func upgrade_cells():
	if player:
		for item_index in table_size:
			var cell = %TableUpgrades.get_child(item_index) as Button
			if player.upgrades.has(item_index):
				cell.text = player.upgrades[item_index]
				cell.modulate.b = 200

## –ù–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
func upgrade_player_cell_click(index):
	if player.upgrades.has(index):
		return
	if player.level_component.level > player.upgrades.size():
		print(index, player, player.upgrades)
		player.upgrades[index] = all_upgrades[index]
		update_player_label()
		upgrade_cells()
	
## –û–±–µ–æ–≤–ª–µ–Ω–∏–µ –ª–µ–π–±–ª–∞ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
func update_player_label():
	if player:
		%PlayerUpgradesLabel.text = "–£–ª—É—á—à–µ–Ω–∏–π: %s. –£—Ä–æ–≤–µ–Ω—å: %s\n%s" % [player.upgrades.size(), player.level_component.level, "\n".join(player.upgrades.values())]
