extends Node2D

## –ö–æ–º–ø–æ–Ω–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–µ–ª–∞—Ç—å —É–ª—É—á—à–µ–Ω–∏—è –¥–ª—è —é–Ω–∏—Ç–∞ (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç —É—Ä–æ–≤–Ω—è –∏–≥—Ä–æ–∫–∞).
class_name MasteryComponent

## –°–∏–≥–Ω–∞–ª –æ–± —É–ª—É—á—à–µ–Ω–∏–∏ –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
signal mastery_upgraded

### —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ —É–ª—É—á—à–µ–Ω–∏–π
#@onready var serializer_compnent: SerializerComponent = $SerializerComponent

## –ü–µ—Ä–µ—á–µ–Ω—å –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —É–ª—É—á—à–µ–Ω–∏–π. "" - –ø—É—Å—Ç–æ—Ç–∞
var upgrades_list = ["‚ù§Ô∏è2", "‚ù§Ô∏è10", "üí™1", "üí™4", "‚öï2", "‚öï6", "", "üëü1"]
## –í—Å–µ —É–ª—É—á—à–µ–Ω–∏—è
var all_upgrades = []

## –î–ª–∏–Ω–∞ —Ç–∞–±–ª–∏—Ü—ã —É–ª—É—á—à–µ–Ω–∏–π
var table_width = 3
## –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–ª—É—á—à–µ –≤–æ–∑–º–æ–∂–Ω—ã—Ö
var table_size = table_width * table_width

## –¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–ª—É—á—à–µ–Ω–∏–π –¥–ª—è —é–Ω–∏—Ç–∞
@export var upgrades = {}

func _ready() -> void:
	print_debug("_READY")
	generate_all_upgrades()
			
## –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω—ã—Ö —É–ª—É—á—à–µ–Ω–∏–π, –µ—Å–ª–∏ –µ—â—ë –Ω–µ –±—ã–ª–æ —Å–æ–∑–¥–∞–Ω–æ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
func generate_all_upgrades():
	if all_upgrades.size() == 0:
		print_debug("NEED GENERATE", all_upgrades, all_upgrades.size(), owner.unit_name, owner.owner)
		for index in table_size:
			all_upgrades.push_front(upgrades_list.pick_random())
			
## –£–ª—É—á—à–µ–Ω–∏–µ –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞ –ø–æ –¥–∞–Ω–Ω–æ–º—É –∏–Ω–¥–µ–∫—Å—É, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
func mastery_upgrade(index: int):
	if not upgrades.has(index):
		upgrades[index] = all_upgrades[index]
		mastery_upgraded.emit()
		print_debug('Mastery upgraded', index)
		
	
### —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–∫—É—â–µ–≥–æ –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
func serialize():
	return $SerializerComponent.serialize()
	#return serializer_compnent.serialize()
	#print_debug(serializer_compnent)
	#if serializer_compnent:
		#print_debug(serializer_compnent.serialize())
		#return serializer_compnent.serialize()
	#else:
		#printerr('MasteryComponent not serialable. serializer_compnent = false', self)
#
### –î–µ—Å–µ—Ä–∏–∞–ª–∏–∑–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
func desirialize(data):
	return $SerializerComponent.deserialize(data)
	#return serializer_compnent.deserialize(data)
